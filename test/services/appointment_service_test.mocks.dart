// Mocks generated by Mockito 5.0.17 from annotations
// in hairstylist_appointment/test/services/appointment_service_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:cloud_firestore/cloud_firestore.dart' as _i2;
import 'package:hairstylist_appointment/models/appointment.dart' as _i5;
import 'package:hairstylist_appointment/repositories/appointment_repository.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeCollectionReference_0<T extends Object?> extends _i1.Fake
    implements _i2.CollectionReference<T> {}

/// A class which mocks [AppointmentRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppointmentRepository extends _i1.Mock
    implements _i3.AppointmentRepository {
  MockAppointmentRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.CollectionReference<Object?> get repoReference =>
      (super.noSuchMethod(Invocation.getter(#repoReference),
              returnValue: _FakeCollectionReference_0<Object?>())
          as _i2.CollectionReference<Object?>);
  @override
  set repoReference(_i2.CollectionReference<Object?>? _repoReference) =>
      super.noSuchMethod(Invocation.setter(#repoReference, _repoReference),
          returnValueForMissingStub: null);
  @override
  _i4.Future<bool> scheduleApppointment(
          String? useremail, _i5.Appointment? appointment) =>
      (super.noSuchMethod(
          Invocation.method(#scheduleApppointment, [useremail, appointment]),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
}
